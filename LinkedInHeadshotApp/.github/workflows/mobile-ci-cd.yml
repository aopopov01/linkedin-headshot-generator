name: LinkedIn Headshot Mobile CI/CD

on:
  push:
    branches: [ main, develop ]
    paths: [ 'src/**', 'android/**', 'ios/**', 'package.json' ]
  pull_request:
    branches: [ main, develop ]
    paths: [ 'src/**', 'android/**', 'ios/**', 'package.json' ]

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'
  RUBY_VERSION: '3.0'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run TypeScript check
      run: npx tsc --noEmit

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm run test:coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: coverage
        fail_ci_if_error: true

  android-build:
    name: Android Build
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: Install dependencies
      run: npm ci

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

    - name: Make gradlew executable
      run: cd android && chmod +x ./gradlew

    - name: Build Android Debug APK
      if: github.ref != 'refs/heads/main'
      run: |
        cd android
        ./gradlew assembleDebug

    - name: Build Android Release APK
      if: github.ref == 'refs/heads/main'
      run: |
        cd android
        ./gradlew assembleRelease
      env:
        MYAPP_UPLOAD_STORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
        MYAPP_UPLOAD_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        MYAPP_UPLOAD_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
        MYAPP_UPLOAD_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

    - name: Upload Android artifacts
      uses: actions/upload-artifact@v3
      with:
        name: android-apk
        path: |
          android/app/build/outputs/apk/**/*.apk

  ios-build:
    name: iOS Build
    runs-on: macos-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true

    - name: Install dependencies
      run: npm ci

    - name: Install pods
      run: |
        cd ios
        pod install

    - name: Build iOS Debug
      if: github.ref != 'refs/heads/main'
      run: |
        cd ios
        xcodebuild -workspace LinkedInHeadshotApp.xcworkspace \
                   -scheme LinkedInHeadshotApp \
                   -configuration Debug \
                   -destination 'generic/platform=iOS Simulator' \
                   -archivePath $PWD/build/LinkedInHeadshotApp.xcarchive \
                   archive

    - name: Build iOS Release
      if: github.ref == 'refs/heads/main'
      run: |
        cd ios
        xcodebuild -workspace LinkedInHeadshotApp.xcworkspace \
                   -scheme LinkedInHeadshotApp \
                   -configuration Release \
                   -destination 'generic/platform=iOS' \
                   -archivePath $PWD/build/LinkedInHeadshotApp.xcarchive \
                   archive
      env:
        CODE_SIGN_IDENTITY: ${{ secrets.IOS_CODE_SIGN_IDENTITY }}
        PROVISIONING_PROFILE_SPECIFIER: ${{ secrets.IOS_PROVISIONING_PROFILE }}
        DEVELOPMENT_TEAM: ${{ secrets.IOS_DEVELOPMENT_TEAM }}

    - name: Export iOS IPA
      if: github.ref == 'refs/heads/main'
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath $PWD/build/LinkedInHeadshotApp.xcarchive \
                   -exportOptionsPlist ExportOptions.plist \
                   -exportPath $PWD/build

    - name: Upload iOS artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ios-ipa
        path: |
          ios/build/*.ipa

  deploy:
    name: Deploy Mobile Apps
    runs-on: ubuntu-latest
    needs: [android-build, ios-build]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Android artifacts
      uses: actions/download-artifact@v3
      with:
        name: android-apk
        path: ./artifacts/android

    - name: Download iOS artifacts
      uses: actions/download-artifact@v3
      with:
        name: ios-ipa
        path: ./artifacts/ios

    - name: Upload to App Store Connect
      uses: apple-actions/upload-testflight-build@v1
      with:
        app-path: './artifacts/ios/LinkedInHeadshotApp.ipa'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}

    - name: Upload to Google Play
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
        packageName: com.linkedinheadshotapp
        releaseFiles: './artifacts/android/app-release.apk'
        track: internal
        status: draft

  notify-mobile:
    name: Notify Mobile Deployment
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()

    steps:
    - name: Notify Slack
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: |
          LinkedIn Headshot Mobile deployment ${{ job.status }}!
          Branch: ${{ github.ref }}
          Commit: ${{ github.sha }}
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}