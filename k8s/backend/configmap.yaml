apiVersion: v1
kind: ConfigMap
metadata:
  name: linkedin-headshot-backend-config
  namespace: ${NAMESPACE:-linkedin-headshot-production}
  labels:
    app: linkedin-headshot-backend
    component: backend
    environment: ${ENVIRONMENT:-production}
data:
  NODE_ENV: "production"
  PORT: "3000"
  LOG_LEVEL: "info"
  API_VERSION: "v1"
  CORS_ORIGIN: "${CORS_ORIGIN:-https://linkedin-headshot.com}"
  RATE_LIMIT_WINDOW_MS: "900000"
  RATE_LIMIT_MAX_REQUESTS: "100"
  UPLOAD_MAX_SIZE: "10485760"
  UPLOAD_ALLOWED_TYPES: "image/jpeg,image/png,image/webp"
  CACHE_TTL: "3600"
  SESSION_TIMEOUT: "86400"
  AI_PROCESSING_TIMEOUT: "300"
  IMAGE_PROCESSING_TIMEOUT: "120"
  HEALTH_CHECK_INTERVAL: "30"
  PROMETHEUS_METRICS_ENABLED: "true"
  SENTRY_ENABLED: "${SENTRY_ENABLED:-true}"
  REPLICATE_MODEL: "stability-ai/sdxl:39ed52f2a78e934b3ba6e2a89f5b1c712de7dfea535525255b1aa35c5565e08b"
  REPLICATE_WEBHOOK_URL: "${REPLICATE_WEBHOOK_URL}"
  CLOUDINARY_FOLDER: "linkedin-headshots"
  CLOUDINARY_TRANSFORMATION: "c_fill,w_512,h_512,q_auto,f_auto"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: ${NAMESPACE:-linkedin-headshot-production}
  labels:
    app: linkedin-headshot-backend
    component: nginx
data:
  nginx.conf: |
    upstream backend {
        server linkedin-headshot-backend-service:80 max_fails=3 fail_timeout=30s;
    }
    
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req zone=api burst=20 nodelay;
        
        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }