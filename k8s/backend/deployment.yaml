apiVersion: apps/v1
kind: Deployment
metadata:
  name: linkedin-headshot-backend
  namespace: ${NAMESPACE:-linkedin-headshot-production}
  labels:
    app: linkedin-headshot-backend
    component: backend
    environment: ${ENVIRONMENT:-production}
    version: v1
spec:
  replicas: ${REPLICAS:-3}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: linkedin-headshot-backend
      component: backend
  template:
    metadata:
      labels:
        app: linkedin-headshot-backend
        component: backend
        environment: ${ENVIRONMENT:-production}
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: linkedin-headshot-backend
        image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: linkedin-headshot-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: linkedin-headshot-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: linkedin-headshot-secrets
              key: jwt-secret
        - name: REPLICATE_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: linkedin-headshot-secrets
              key: replicate-api-token
        - name: CLOUDINARY_CLOUD_NAME
          valueFrom:
            secretKeyRef:
              name: linkedin-headshot-secrets
              key: cloudinary-cloud-name
        - name: CLOUDINARY_API_KEY
          valueFrom:
            secretKeyRef:
              name: linkedin-headshot-secrets
              key: cloudinary-api-key
        - name: CLOUDINARY_API_SECRET
          valueFrom:
            secretKeyRef:
              name: linkedin-headshot-secrets
              key: cloudinary-api-secret
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 10
        volumeMounts:
        - name: logs-volume
          mountPath: /app/logs
        - name: uploads-volume
          mountPath: /app/uploads
        - name: temp-volume
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1001
      volumes:
      - name: logs-volume
        persistentVolumeClaim:
          claimName: linkedin-headshot-logs-pvc
      - name: uploads-volume
        persistentVolumeClaim:
          claimName: linkedin-headshot-uploads-pvc
      - name: temp-volume
        emptyDir:
          sizeLimit: 1Gi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - linkedin-headshot-backend
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300