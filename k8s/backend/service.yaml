apiVersion: v1
kind: Service
metadata:
  name: linkedin-headshot-backend-service
  namespace: ${NAMESPACE:-linkedin-headshot-production}
  labels:
    app: linkedin-headshot-backend
    component: backend
    environment: ${ENVIRONMENT:-production}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: /health
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "30"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-unhealthy-threshold: "3"
spec:
  type: LoadBalancer
  selector:
    app: linkedin-headshot-backend
    component: backend
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  sessionAffinity: None
  externalTrafficPolicy: Cluster
---
apiVersion: v1
kind: Service
metadata:
  name: linkedin-headshot-backend-headless
  namespace: ${NAMESPACE:-linkedin-headshot-production}
  labels:
    app: linkedin-headshot-backend
    component: backend
    service-type: headless
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: linkedin-headshot-backend
    component: backend
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP